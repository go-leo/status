syntax = "proto3";
package leo.status;
option go_package = "github.com/go-leo/status/proto/leo/status;status";

import "google/protobuf/any.proto";
import "google/rpc/code.proto";

// HttpBody is the http body.
// see: https://google.aip.dev/193 HTTP/1.1+JSON representation
message Status {
  Error error = 1;
}

  message Error {
        // This distinguish between two Status objects as being the same when
    // both code and status are identical.
    string identifier = 1;
        // This is the enum version for `google.rpc.Status.code`.
    google.rpc.Code rpc_status = 2;
    // The HTTP status code that corresponds to `google.rpc.Status.code`.
    int32 http_status = 3;
    // This corresponds to `google.rpc.Status.message`.
    string message = 4;
    // This corresponds to `google.rpc.Status.details`.
    Detail details = 5;
  }

message Detail {
  // error_info is the error info.
  google.rpc.ErrorInfo error_info = 1;

  // retry_info is the retry info.
  google.rpc.RetryInfo retry_info = 2;

  // debug_info is the debug info.
  google.rpc.DebugInfo debug_info = 3;

  // quota_failure is the quota failure.
  google.rpc.QuotaFailure quota_failure = 4;

  // precondition_failure is the precondition failure.
  google.rpc.PreconditionFailure precondition_failure = 5;

  // bad_request is the bad request.
  google.rpc.BadRequest bad_request = 6;

  // request_info is the request info.
  google.rpc.RequestInfo request_info = 7;

  // resource_info is the resource info.
  google.rpc.ResourceInfo resource_info = 8;

  // help is the help.
  google.rpc.Help help = 9;

  // localized_message is the localized message.
  google.rpc.LocalizedMessage localized_message = 10;
}